local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

-- 🛑 Prevent duplicates
if LocalPlayer.PlayerGui:FindFirstChild("EnemyNameGui") then
    return
end

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "EnemyNameGui"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

-- 📦 Compact Frame
local Frame = Instance.new("Frame", ScreenGui)
Frame.Size = UDim2.new(0, 180, 0, 80)
Frame.Position = UDim2.new(0.5, -90, 0, 50)
Frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
Frame.BackgroundTransparency = 0.1
Frame.Active = true

local UICorner = Instance.new("UICorner", Frame)
UICorner.CornerRadius = UDim.new(0, 10)

local UIStroke = Instance.new("UIStroke", Frame)
UIStroke.Thickness = 2
UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

-- 🔘 Toggle Button (always visible)
local ToggleButton = Instance.new("TextButton", ScreenGui)
ToggleButton.Size = UDim2.new(0, 50, 0, 22)
ToggleButton.Position = UDim2.new(0.5, -25, 0, 20)
ToggleButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.TextScaled = true
ToggleButton.Font = Enum.Font.GothamBold
ToggleButton.Text = "Hide"
ToggleButton.Active = true

local UICornerBtn = Instance.new("UICorner", ToggleButton)
UICornerBtn.CornerRadius = UDim.new(0, 6)

-- 🎯 Target Label
local TargetLabel = Instance.new("TextLabel", Frame)
TargetLabel.Size = UDim2.new(1, 0, 0.4, 0)
TargetLabel.Position = UDim2.new(0, 0, 0.05, 0)
TargetLabel.BackgroundTransparency = 1
TargetLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TargetLabel.TextScaled = true
TargetLabel.Font = Enum.Font.GothamBold
TargetLabel.Text = "Target: None"

-- ❤️ Health Label
local HealthLabel = Instance.new("TextLabel", Frame)
HealthLabel.Size = UDim2.new(1, 0, 0.3, 0)
HealthLabel.Position = UDim2.new(0, 0, 0.45, 0)
HealthLabel.BackgroundTransparency = 1
HealthLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
HealthLabel.TextScaled = true
HealthLabel.Font = Enum.Font.Gotham
HealthLabel.Text = "HP: 0 / 0"

-- 📊 Health Bar
local HealthBarBG = Instance.new("Frame", Frame)
HealthBarBG.Size = UDim2.new(0.9, 0, 0.15, 0)
HealthBarBG.Position = UDim2.new(0.05, 0, 0.8, 0)
HealthBarBG.BackgroundColor3 = Color3.fromRGB(40, 40, 40)

local HealthBarCorner = Instance.new("UICorner", HealthBarBG)
HealthBarCorner.CornerRadius = UDim.new(0, 6)

local HealthBar = Instance.new("Frame", HealthBarBG)
HealthBar.Size = UDim2.new(1, 0, 1, 0)
HealthBar.BackgroundColor3 = Color3.fromRGB(0, 255, 0)

local HealthBarCorner2 = Instance.new("UICorner", HealthBar)
HealthBarCorner2.CornerRadius = UDim.new(0, 6)

-- 🌈 RGB Effect
task.spawn(function()
    local hue = 0
    while task.wait(0.03) do
        if not ScreenGui.Parent then break end
        hue = (hue + 0.01) % 1
        local rgb = Color3.fromHSV(hue, 1, 1)
        UIStroke.Color = rgb
        TargetLabel.TextColor3 = rgb
        ToggleButton.TextColor3 = rgb
        HealthBar.BackgroundColor3 = rgb
    end
end)

-- 📌 Dragging function
local function makeDraggable(guiObject)
    local dragging, dragStart, startPos
    guiObject.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1
            or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = guiObject.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement
            or input.UserInputType == Enum.UserInputType.Touch) then
            local delta = input.Position - dragStart
            guiObject.Position = UDim2.new(
                startPos.X.Scale,
                startPos.X.Offset + delta.X,
                startPos.Y.Scale,
                startPos.Y.Offset + delta.Y
            )
        end
    end)
end

-- Enable dragging for both
makeDraggable(Frame)
makeDraggable(ToggleButton)

-- 🔄 Hide/Show logic
ToggleButton.MouseButton1Click:Connect(function()
    Frame.Visible = not Frame.Visible
    ToggleButton.Text = Frame.Visible and "Hide" or "Show"
end)

-- 🔎 Track Closest Enemy
task.spawn(function()
    while task.wait(0.2) do
        if not ScreenGui.Parent then break end
        if not Frame.Visible then continue end

        local character = LocalPlayer.Character
        local hrp = character and character:FindFirstChild("HumanoidRootPart")
        if not hrp then
            TargetLabel.Text = "Target: None"
            HealthLabel.Text = "HP: 0 / 0"
            HealthBar.Size = UDim2.new(0, 0, 1, 0)
            continue
        end

        local closestEnemy, shortestDistance = nil, math.huge
        for _, v in pairs(workspace.Enemys:GetChildren()) do
            if v:IsA("Model") then
                local hum = v:FindFirstChild("Humanoid")
                local enemyHRP = v:FindFirstChild("HumanoidRootPart")
                if hum and enemyHRP and hum.Health > 0 then
                    local dist = (hrp.Position - enemyHRP.Position).Magnitude
                    if dist < shortestDistance then
                        closestEnemy, shortestDistance = v, dist
                    end
                end
            end
        end

        if closestEnemy then
            local hum = closestEnemy:FindFirstChild("Humanoid")
            TargetLabel.Text = "Target: " .. (closestEnemy.Name or "Unknown")
            if hum then
                HealthLabel.Text = "HP: " .. math.floor(hum.Health) .. " / " .. math.floor(hum.MaxHealth)
                local ratio = math.clamp(hum.Health / hum.MaxHealth, 0, 1)
                HealthBar.Size = UDim2.new(ratio, 0, 1, 0)
            end
        else
            TargetLabel.Text = "Target: None"
            HealthLabel.Text = "HP: 0 / 0"
            HealthBar.Size = UDim2.new(0, 0, 1, 0)
        end
    end
end)
